[{"id":0,"href":"/astro-notes/docs/fermi-lat-analysis/","title":"Fermi LAT Analysis","section":"Docs","content":" Fermi LAT Analysis # Written byJoysankar Majumdar The Fermi Gamma-ray Space Telescope, formerly GLAST, is opening this high-energy world to exploration and helping us answer these questions. It contains an instrument named Large Area Telescope (LAT), which performs an all-sky survey in the energy range 100 MeV to 500 GeV.\nFermi LAT has the latest 14-year Source Catalog (4FGL-DR4), which contains more than 7000 gamma-ray sources. To visualise their temporal light curves, you can visit LightCurveRepository.\nI will guide you through the installation and analysis of Fermi LAT in the next sections.\n"},{"id":1,"href":"/astro-notes/docs/heasoft-installation/","title":"Heasoft Installation","section":"Docs","content":" Heasoft Installation # Written byJoysankar Majumdar HEASOFT (High Energy Astrophysics Software) is a comprehensive software package developed by NASA\u0026rsquo;s High Energy Astrophysics Science Archive Research Center (HEASARC) for analyzing data from X-ray and gamma-ray astronomy missions. The suite includes tools for data reduction, spectral analysis, timing analysis, and image processing from missions like Chandra, XMM-Newton, Swift, NuSTAR, and many others. It provides both command-line utilities and interactive analysis environments, with core components like XSPEC for spectral fitting, XIMAGE for image analysis, and mission-specific tools for various high-energy observatories. HEASOFT is freely available and runs on Unix/Linux and macOS systems, making it an essential toolkit for researchers studying black holes, neutron stars, supernova remnants, and other high-energy astrophysical phenomena.\nI will explain the installation in Ubuntu 24.\nDownload installation file # Download the source code from the link. I recommend that you download the Complete HEASoft source code (all mission \u0026amp; general-use software) from the page stated above.\nThen extract it and put that extracted folder in a safe location where HEASOFT is to be installed.\nPrerequisites installation # Run the command below in the terminal.\nsudo apt-get -y install libreadline-dev libncurses5-dev ncurses-dev curl \\ libcurl4 libcurl4-gnutls-dev xorg-dev make gcc g++ gfortran perl-modules \\ libdevel-checklib-perl libfile-which-perl python3-dev python3-pip python3-setuptools \\ python3-astropy python3-numpy python3-scipy python3-matplotlib I recommend installing gedit in the system. Thus, run the command below.\nsudo apt install gedit Now open the terminal in the root folder or just click the terminal icon. Write the variables below in the .bashrc file. Open the .bashrc file using the command below.\ngedit .bashrc Now write the text in the .bashrc file.\nexport CC=/usr/bin/gcc export CXX=/usr/bin/g++ export FC=/usr/bin/gfortran export PERL=/usr/bin/perl export PYTHON=/usr/bin/python3 Software installation # Now go to the folder where you have extracted the HEASOFT source code. Go to the BUILD_DIR folder and now open the terminal in this folder. First, do the configuration, so run the code below in that terminal.\n./configure \u0026gt; config.txt 2\u0026gt;\u0026amp;1 After configuration, open the config.txt file and check the end of the file. For successful configuration, the file ends with Finished. Now we need to build the software and thus run the code below.\nmake \u0026gt; build.txt 2\u0026gt;\u0026amp;1 It will take a longer time, maybe 40 minutes to 60 minutes. Check the long build.txt file; successful building ends with finished word. Now you need to install it. Run the code below for installation.\nmake install \u0026gt; install.txt 2\u0026gt;\u0026amp;1 Similarly, check install.txt for successful installation. If everything goes well, it will generate a platform folder inside the heasoft folder. The folder should look like x86_64-pc-linux-gnu-libc2.39.\nCALDB installation # We need to install the calibration database for the system and spacecraft. Download the software caldb files from the link. Create a folder named caldb in a safe location. Extract the software caldb file and copy the software folder inside the caldb folder. Create another folder named data inside the caldb folder. Now, inside the data folder, you need to download the mission-specific caldb files. The mission-specific caldb files can be downloaded from the link. For example, if you download the NuStar caldb files and extract them, copy the nustar folder inside that data folder. Similar way, download all the needed mission-specific caldb files.\nVariables initialization # Now open a new terminal and open the .bashrc file using the command gedit .bashrc. Now write the text in the file mentioned below.\nexport HEADAS=your_installation_path/x86_64-pc-linux-gnu-libc2.39 alias heainit=\u0026#34;. $HEADAS/headas-init.sh\u0026#34; export CALDB=\u0026#39;your_caldb_path/caldb\u0026#39; alias CALDB=\u0026#39;source $CALDB/software/tools/caldbinit.sh\u0026#39; export CALDBCONFIG=\u0026#39;your_caldb_path/caldb/software/tools/caldb.config\u0026#39; export CALDBALIAS=\u0026#39;your_caldb_path/caldb/software/tools/alias_config.fits\u0026#39; source $CALDB/software/tools/caldbinit.sh Make sure to change the your_installation_path and your_caldb_path according to your installation. Now save the file and close the terminal. Open a new terminal and type heainit to initialize the HEASOFT. To use any tool of HEASOFT, you need to heainit every time in the terminal.\n"},{"id":2,"href":"/astro-notes/docs/fermi-lat-analysis/installation/","title":"Installation","section":"Fermi LAT Analysis","content":" Installation # Written byJoysankar Majumdar The Fermi mission provides a suite of tools called the Fermitools for the analysis of LAT. We are not going to use Fermitools directly; rather, we are going to use FermiPy.\nA Linux-based operating system is best for Fermi LAT analysis. We are going to follow the installation procedure for Ubuntu 24.04.2 LTS.\nWe need to install the conda-forge distribution from the GitHub repository. From the latest release, download the Miniforge**-Linux-x86_64.sh file.\nRun this script file with the bash command.\nbash Miniforge3-25.3.1-0-Linux-x86_64.sh It will be installed in your system. Generally, it creates a folder miniforge in the home directory.\nYou need to export the path of the installed miniforge.\nexport PATH=path_to_the_diretory/miniforge/condabin:$PATH And now, in that same terminal, you need to initialise conda.\nconda init Now close this terminal and open another terminal, and it should look like below The (base) indicates the activation of the base environment in conda.\nWe have to create another environment for FermiPy. Run the command below in the terminal.\nmamba create --name fermipy -c conda-forge -c fermi python=3.9 \u0026#34;fermitools\u0026gt;=2.2.0\u0026#34; healpy gammapy After this, to activate the new fermipy environment, run\nmamba activate fermipy You have to install the fermipy package inside the fermipy environment\npip install fermipy Additionally, you should install the Jupyter Notebook for better coding\npip install notebook You have successfully installed fermitools and FermiPy. Make sure to use FermiPy; you need to activate the fermipy environment each time.\n"},{"id":3,"href":"/astro-notes/docs/fermi-lat-analysis/analysis/","title":"Analysis","section":"Fermi LAT Analysis","content":" Analysis # Written byJoysankar Majumdar I will be explaining how you can analyze the point sources detected by Fermi LAT.\nBackground model download # We need to download the latest Galactic interstellar emission model and the Isotropic spectral template from this page. So download the gll_iem_v07.fits and iso_P8R3_SOURCE_V3_v1.txt for Event Selection of Pass 8 Source.\nAdditionally, I will suggest downloading the latest Fermi LAT catalog in FITS format from this link.\nKeep all these files in a separate folder, so that we can use them for each analysis.\nData download # Download the data for your specified source from the link.\nFor time conversion, you can use the xTime tool.\nConventionally, we choose a search radius of 20 $\\degree$. Fermi LAT operates in the energy range ~20 MeV to \u0026gt;300 GeV, but we can generally choose 100 MeV to 500 GeV. We need the spacecraft file also for analysis.\nNow download all the files in a separate folder. Some files will contain PH, and some will contain SC in their names. The PH files hold the photon data, and SC will hold the spacecraft data during that observation. Now, create a file that contains the list of PH files using the code in the terminal opened in the same folder\nls *PH* \u0026gt; ph_list.dat It will create a ph_list.dat file, which will list the PH files.\nMake sure that the folder you create does not contain any spaces; otherwise, your analysis will fail.\nConfiguration file # You need to create a config.yaml file in that folder where the data is located. It is like a simple text file, which contains the configuration information. This file will be structured as below\ndata: evfile : ph_list.dat scfile : L250815080059DAC8B79833_SC00.fits binning: roiwidth : 20.0 binsz : 0.1 binsperdec : 8 selection : emin : 100 emax : 500000 zmax : 90 evclass : 128 evtype : 3 tmin : 757382405.0 tmax : 776908805.0 filter : \u0026#39;DATA_QUAL\u0026gt;0 \u0026amp;\u0026amp; LAT_CONFIG==1\u0026#39; target : \u0026#39;3C 138\u0026#39; gtlike: edisp: true irfs: \u0026#39;P8R3_SOURCE_V3\u0026#39; edisp_disable : [\u0026#39;isodiff\u0026#39;,\u0026#39;galdiff\u0026#39;] model: src_radius : 15.0 catalogs : \u0026#39;/home/joysankar/fermi-catlog/gll_psc_v35.fit\u0026#39; galdiff : \u0026#39;/home/joysankar/fermi-catlog/gll_iem_v07.fits\u0026#39; isodiff : \u0026#39;/home/joysankar/fermi-catlog/iso_P8R3_SOURCE_V3_v1.txt\u0026#39; The evfile is the name of the PH file list, which we have created previously. scfile is the spacecraft file you have already downloaded. Make sure to set emin (MeV), emax(MeV), tmin (MET), and tmax (MET). In target, put the object name, but better to use the 4FGL name. Make sure to give the appropriate path of catalogs, galdiff, and isodiff. binsperdec is a factor that determines the binning.\nNotebook analysis # Now open a terminal in that folder and activate the fermipy environment.\nconda activate fermipy Then open a Jupyter Notebook and run the code attached below step by step.\nfrom fermipy.gtanalysis import GTAnalysis gta = GTAnalysis(\u0026#39;config.yaml\u0026#39;,logging={\u0026#39;verbosity\u0026#39; : 3}) gta.setup() It will take time and perform the initial analysis.\ngta.optimize() It will fit the spectral parameters of the source.\ngta.print_roi() It will show the sources with TS values Now we\u0026rsquo;ll free the sources within the 3$\\degree$ of ROI.\ngta.free_sources(free=False) gta.free_sources(distance=3.0,pars=\u0026#39;norm\u0026#39;) gta.free_source(\u0026#39;4FGL J2321.9+2734\u0026#39;) gta.free_source(\u0026#39;galdiff\u0026#39;) gta.free_source(\u0026#39;isodiff\u0026#39;) You need to fit the parameters by running the code below\ngta.fit() SED analysis # sed = gta.sed(\u0026#39;4FGL J2321.9+2734\u0026#39;,make_plots=True) It will generate a file like 4fgl_j0521.2+1637_sed.fits which will be used for SED plotting.\nLight curve analysis # lc = gta.lightcurve(\u0026#39;4FGL J2321.9+2734\u0026#39;, binsz=21600.0,outdir=\u0026#39;6hrs_dir\u0026#39;, multithread=True, nthread=3, write_fits=True) It will generate a file like 4fgl_j1310.5+3221_lightcurve.fits which will be used for light curve plotting. The binsz is the binning time in seconds. The multithread is for parallel calculation. The outdir is the directory where each bin file will be generated. The nthread is the number of parallel threads. It will take time based on the binning size.\n"}]